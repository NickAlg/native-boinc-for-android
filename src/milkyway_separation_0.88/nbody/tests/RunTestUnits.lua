
local arg = {...}

assert(#arg == 5, "Test driver expected 5 arguments got " .. #arg)

local nbodyBinary = arg[1]
local testDir = arg[2]
local testName = arg[3]
local histogramName = arg[4]
local testBodies = arg[5]


-- Pick one of the random seeds used in generating these tests
local testSeeds = { "670828913", "886885833", "715144259", "430281807", "543966758" }
math.randomseed(os.time())
local testSeed = testSeeds[math.random(1, #testSeeds)]
local generatingResults = false

refResults = {
   ["model_1"] = {
      ["100"] = {
         ["670828913"] = -13833.731309987899294,
         ["886885833"] = -7892.304096073079563,
         ["715144259"] = -25927.834914769799070,
         ["430281807"] = -16460.584065697999904,
         ["543966758"] = -8346.592107938180561
      },

      ["1024"] = {
         ["670828913"] = -6226.410986491419862,
         ["886885833"] = -9783.838689123909717,
         ["715144259"] = -6263.927970873750382,
         ["430281807"] = -10634.953434229399136,
         ["543966758"] = -7897.369524742640351
      },

      ["10000"] = {
         ["670828913"] = -6591.195032537780207,
         ["886885833"] = -5292.814563809460196,
         ["715144259"] = -7142.462532675240254,
         ["430281807"] = -6675.818005620460099,
         ["543966758"] = -9204.571863590690555
      }
   },

   ["model_2"] = {
      ["100"] = {
         ["670828913"] = -8197.075583271380310,
         ["886885833"] = -1322.506862135330039,
         ["715144259"] = -4635.198407504410170,
         ["430281807"] = -9046.874467993289727,
         ["543966758"] = -2344.523275794800156
      },

      ["1024"] = {
         ["670828913"] = -11562.304641985499984,
         ["886885833"] = -6669.542292422020182,
         ["715144259"] = -3696.386840543209928,
         ["430281807"] = -4105.882578911339806,
         ["543966758"] = -8345.409508208620537
      },

      ["10000"] = {
         ["670828913"] = -6589.572805394779607,
         ["886885833"] = -5411.792442468399713,
         ["715144259"] = -6777.697111273409973,
         ["430281807"] = -6335.225623918890051,
         ["543966758"] = -6554.792737793820379
      }
   },

   ["model_3"] = {
      ["100"] = {
         ["670828913"] = -2928.927786582979934,
         ["886885833"] = -7352.257470909129552,
         ["715144259"] = -1324.795235753500037,
         ["430281807"] = -3034.757132434760024,
         ["543966758"] = -1495.391440975919977
      },

      ["1024"] = {
         ["670828913"] = -5457.070033670640441,
         ["886885833"] = -3980.048547375340149,
         ["715144259"] = -3592.407131603949892,
         ["430281807"] = -3520.922963588519906,
         ["543966758"] = -3916.850728961710047
      },

      ["10000"] = {
         ["670828913"] = -8620.633177257330317,
         ["886885833"] = -10336.452682434699454,
         ["715144259"] = -8563.727108151859284,
         ["430281807"] = -4633.608032966490100,
         ["543966758"] = -10160.105823666099241
      }
   },

   ["model_4"] = {
      ["100"] = {
         ["670828913"] = -3183.132002024829944,
         ["886885833"] = -17924.163678136101225,
         ["715144259"] = -3052.701264560550044,
         ["430281807"] = -14482.832375897200109,
         ["543966758"] = -7896.086358427300183
      },

      ["1024"] = {
         ["670828913"] = -5000.197521499870163,
         ["886885833"] = -5100.493531677399915,
         ["715144259"] = -4823.233924850240328,
         ["430281807"] = -5251.987447726010032,
         ["543966758"] = -4310.736067793999609,
      },

      ["10000"] = {
         ["670828913"] = -5520.885194080559813,
         ["886885833"] = -3947.337188757860076,
         ["715144259"] = -4697.375746805490053,
         ["430281807"] = -4340.840965308129853,
         ["543966758"] = -4577.425996484250390
      }
   },

   ["model_5"] = {
      ["100"] = {
         ["670828913"] = -8751.879704287639470,
         ["886885833"] = -11563.276193893399977,
         ["715144259"] = -17347.059272605099977,
         ["430281807"] = -2593.847732821810041,
         ["543966758"] = -24177.407530463900912
      },

      ["1024"] = {
         ["670828913"] = -6551.498487916600425,
         ["886885833"] = -6343.933065643180271,
         ["715144259"] = -5287.176558217899583,
         ["430281807"] = -7719.911641419959778,
         ["543966758"] = -10285.118015144300443
      },

      ["10000"] = {
         ["670828913"] = -12863.623834796500887,
         ["886885833"] = -5040.042210627590066,
         ["715144259"] = -5694.503465883970421,
         ["430281807"] = -10314.579604368300352,
         ["543966758"] = -11100.404406518100586
      }
   },

   ["model_5_bounds_test"] = {
      ["100"] = {
         ["670828913"] = -5613.376378205180117,
         ["886885833"] = -11656.831457091100674,
         ["715144259"] = -2574.451168809709998,
         ["430281807"] = -6707.164861265599939,
         ["543966758"] = -4225.526072163709614
      },

      ["1024"] = {
         ["670828913"] = -895.342235725943056,
         ["886885833"] = -1699.557639375720100,
         ["715144259"] = -900.815531794605022,
         ["430281807"] = -1494.789639088809963,
         ["543966758"] = -795.866497724632040
      },

      ["10000"] = {
         ["670828913"] = -331.256866264101006,
         ["886885833"] = -467.053674908022003,
         ["715144259"] = -596.849029571204028,
         ["430281807"] = -431.824594945476008,
         ["543966758"] = -464.917430653999020
      }
   },

   ["model_6"] = {
      ["100"] = {
         ["670828913"] = -9436.063886741860188,
         ["886885833"] = -20858.468328698698315,
         ["715144259"] = -5687.542810643370103,
         ["430281807"] = -14995.571924767500605,
         ["543966758"] = -12943.388585984099336
      },

      ["1024"] = {
         ["670828913"] = -6404.187090751829601,
         ["886885833"] = -6902.631019457759976,
         ["715144259"] = -7702.215098825259702,
         ["430281807"] = -5650.510715570179855,
         ["543966758"] = -5520.049518362509843
      },

      ["10000"] = {
         ["670828913"] = -5862.350963310669613,
         ["886885833"] = -5983.637011332400107,
         ["715144259"] = -6987.801988969979902,
         ["430281807"] = -5661.950149633329602,
         ["543966758"] = -6090.678557225040095
      }

   },

   ["model_7"] = {
      ["100"] = {
         ["670828913"] = -25902.906498467898928,
         ["886885833"] = -10402.916588354999476,
         ["715144259"] = -14489.473643432500467,
         ["430281807"] = -15867.292223595499308,
         ["543966758"] = -8776.950971161180860
      },

      ["1024"] = {
         ["670828913"] = -5200.017647028509600,
         ["886885833"] = -5143.652976153540294,
         ["715144259"] = -7772.330011589750029,
         ["430281807"] = -9158.506375099839715,
         ["543966758"] = -11324.447356594799203
      },

      ["10000"] = {
         ["670828913"] = -7608.846015548359901,
         ["886885833"] = -16561.808995720701205,
         ["715144259"] = -9921.287852006689718,
         ["430281807"] = -7499.840927866909624,
         ["543966758"] = -6128.091828219469789
      }
   },

   ["model_triaxial"] = {
      ["100"] = {
         ["670828913"] = -3782.343983875120102,
         ["886885833"] = -3411.102594775280068,
         ["715144259"] = -2746.520178665080039,
         ["430281807"] = -2178.869598272559870,
         ["543966758"] = -2567.201240292280090
      },

      ["1024"] = {
         ["670828913"] = -4318.274925499190431,
         ["886885833"] = -1951.879261796120090,
         ["715144259"] = -2053.282951098480225,
         ["430281807"] = -1637.224368139100079,
         ["543966758"] = -1281.858965930540080
      },

      ["10000"] = {
         ["670828913"] = -4355.185610458899646,
         ["886885833"] = -4073.968036395810032,
         ["715144259"] = -3392.079468521019862,
         ["430281807"] = -4030.240920996020122,
         ["543966758"] = -5823.843694836249597
      }
   }
}

function getTestFilePath(baseName)
   return testDir .. "/" .. baseName .. ".lua"
end

function getHistogramFilePath(histogramFileName)
   return testDir .. "/" .. histogramFileName
end

function os.readProcess(bin, ...)
   local args, cmd
   args = table.concat({...}, " ")
   -- Redirect stderr to stdout, since popen only gets stdout
   cmd = table.concat({ bin, args, "2>&1" }, " ")
   local f = assert(io.popen(cmd, "r"))
   local s = assert(f:read('*a'))
   f:close()
   return s
end


function runFullTest(testName, seed, ...)
   return os.readProcess(nbodyBinary,
                         "-i", "--checkpoint-interval=-1", -- Disable checkpointing
                         "-g", -- Prevent stderr from getting consumed with BOINC
                         "-t",
                         "-f", getTestFilePath(testName),
                         "-h", getHistogramFilePath(histogramName),
                         "--seed", seed,
                         table.concat({...}, " ")
                      )
end

-- Find the likelihood from the output of the process
function findLikelihood(str)
   local m = str:match("<search_likelihood>([+-]?%d+[.]?%d+e?[+-]?%d+)</search_likelihood>")
   local lineSep = string.rep("-", 80) .. "\n"
   if m == nil then
      io.stderr:write("Didn't match likelihood in output\nOffending output:\n" .. lineSep)
      io.stderr:write(str .. lineSep)
      return nil
   else
      return tonumber(m)
   end
end

function resultCloseEnough(a, b)
   return math.abs(a - b) < 1.0e-12
end

errFmtStr = [[
Result differs from expected:
   Expected = %20.15f  Actual = %20.15f  |Difference| = %20.15f
]]

function runCheckTest(testName, seed, nbody, ...)
   local fileResults, bodyResults
   local ret, result

   if not generatingResults then
      -- Check if the result exists first so we don't waste time on a useless test
      fileResults = assert(refResults[testName], "Didn't find result for test file")
      bodyResults = assert(fileResults[nbody], "Didn't find result with matching bodies")
      refResult = assert(bodyResults[seed], "Didn't find result with matching seed")
   end


   ret = runFullTest(testName, seed, nbody, ...)
   result = findLikelihood(ret)

   if generatingResults then
      io.stderr:write(string.format("Test result: %d, %d, %s: %20.15f\n", nbody, seed, testName, result))
      return false
   end

   if result == nil then
      return true
   end

   local notClose = not resultCloseEnough(refResult, result)
   if notClose then
      io.stderr:write(string.format(errFmtStr, refResult, result, math.abs(result - refResult)))
   end

   return notClose
end

if runCheckTest(testName, testSeed, testBodies) then
   os.exit(1)
end


