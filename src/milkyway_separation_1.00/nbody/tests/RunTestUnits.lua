
require "NBodyTesting"
require "persistence"

local arg = {...}

assert(#arg == 5, "Test driver expected 5 arguments got " .. #arg)

local nbodyBinary = arg[1]
local testDir = arg[2]
local testName = arg[3]
local histogramName = arg[4]
local testBodies = arg[5]

local nbodyFlags = getExtraNBodyFlags()
eprintf("NBODY_FLAGS = %s\n", nbodyFlags)

math.randomseed(os.time())

-- Pick one of the random seeds used in generating these tests
local testSeeds = { "670828913", "886885833", "715144259", "430281807", "543966758" }
local testSeed = testSeeds[math.random(1, #testSeeds)]


refResults = {
   ["model_1"] = {
      ["100"] = {
         ["670828913"] = 4391.295152428693655,
         ["886885833"] = 7579.933170867871013,
         ["715144259"] = 14380.338514334935098,
         ["430281807"] = 40205.226776021387195,
         ["543966758"] = 9318.257363365408310
      },

      ["1024"] = {
         ["670828913"] = 3395.539961463494819,
         ["886885833"] = 7321.748652067359217,
         ["715144259"] = 5712.765936102839078,
         ["430281807"] = 6261.083434797372320,
         ["543966758"] = 6109.590400069013413
      },

      ["10000"] = {
         ["670828913"] = 7109.728282612089970,
         ["886885833"] = 6248.377340352921237,
         ["715144259"] = 7023.596816373553338,
         ["430281807"] = 6796.930828448236753,
         ["543966758"] = 9242.747586754063377
      }
   },

   ["model_2"] = {
      ["100"] = {
         ["670828913"] = 9598.840258838035879,
         ["886885833"] = 2058.542086954814295,
         ["715144259"] = 2676.716484691005007,
         ["430281807"] = 3699.884918700261551,
         ["543966758"] = 1648.622227359706130
      },

      ["1024"] = {
         ["670828913"] = 13938.551346316742638,
         ["886885833"] = 7156.157934071017735,
         ["715144259"] = 5196.995255300260396,
         ["430281807"] = 6414.815775511664469,
         ["543966758"] = 9040.002288692508955
      },

      ["10000"] = {
         ["670828913"] = 11113.433173345485557,
         ["886885833"] = 5265.838742493808240,
         ["715144259"] = 5982.078200299700256,
         ["430281807"] = 5697.771420844186650,
         ["543966758"] = 10840.128346921852426
      }
   },

   ["model_3"] = {
      ["100"] = {
         ["670828913"] = 2928.927786582979934,
         ["886885833"] = 7352.257470909129552,
         ["715144259"] = 1324.795235753500037,
         ["430281807"] = 3034.757132434760024,
         ["543966758"] = 1495.391440975919977
      },

      ["1024"] = {
         ["670828913"] = 5457.070033670640441,
         ["886885833"] = 3980.048547375340149,
         ["715144259"] = 3592.407131603949892,
         ["430281807"] = 3520.922963588519906,
         ["543966758"] = 3916.850728961710047
      },

      ["10000"] = {
         ["670828913"] = 8620.633177257330317,
         ["886885833"] = 10336.452682434699454,
         ["715144259"] = 8563.727108151859284,
         ["430281807"] = 4633.608032966490100,
         ["543966758"] = 10160.105823666099241
      }
   },

   ["model_4"] = {
      ["100"] = {
         ["670828913"] = 3183.132002024829944,
         ["886885833"] = 17924.163678136101225,
         ["715144259"] = 3052.701264560550044,
         ["430281807"] = 14482.832375897200109,
         ["543966758"] = 7896.086358427300183
      },

      ["1024"] = {
         ["670828913"] = 5000.197521499870163,
         ["886885833"] = 5100.493531677399915,
         ["715144259"] = 4823.233924850240328,
         ["430281807"] = 5251.987447726010032,
         ["543966758"] = 4310.736067793999609,
      },

      ["10000"] = {
         ["670828913"] = 5520.885194080559813,
         ["886885833"] = 3947.337188757860076,
         ["715144259"] = 4697.375746805490053,
         ["430281807"] = 4340.840965308129853,
         ["543966758"] = 4577.425996484250390
      }
   },

   ["model_5"] = {
      ["100"] = {
         ["670828913"] = 8751.879704287639470,
         ["886885833"] = 11563.276193893399977,
         ["715144259"] = 17347.059272605099977,
         ["430281807"] = 2593.847732821810041,
         ["543966758"] = 24177.407530463900912
      },

      ["1024"] = {
         ["670828913"] = 6551.498487916600425,
         ["886885833"] = 6343.933065643180271,
         ["715144259"] = 5287.176558217899583,
         ["430281807"] = 7719.911641419959778,
         ["543966758"] = 10285.118015144300443
      },

      ["10000"] = {
         ["670828913"] = 12863.623834796500887,
         ["886885833"] = 5040.042210627590066,
         ["715144259"] = 5694.503465883970421,
         ["430281807"] = 10314.579604368300352,
         ["543966758"] = 11100.404406518100586
      }
   },

   ["model_5_bounds_test"] = {
      ["100"] = {
         ["670828913"] = 5613.376378205180117,
         ["886885833"] = 11656.831457091100674,
         ["715144259"] = 2574.451168809709998,
         ["430281807"] = 6707.164861265599939,
         ["543966758"] = 4225.526072163709614
      },

      ["1024"] = {
         ["670828913"] = 895.342235725943056,
         ["886885833"] = 1699.557639375720100,
         ["715144259"] = 900.815531794605022,
         ["430281807"] = 1494.789639088809963,
         ["543966758"] = 795.866497724632040
      },

      ["10000"] = {
         ["670828913"] = 331.256866264101006,
         ["886885833"] = 467.053674908022003,
         ["715144259"] = 596.849029571204028,
         ["430281807"] = 431.824594945476008,
         ["543966758"] = 464.917430653999020
      }
   },

   ["model_6"] = {
      ["100"] = {
         ["670828913"] = 15480.565263643882645,
         ["886885833"] = 25468.423652401950676,
         ["715144259"] = 14123.156215463759509,
         ["430281807"] = 7754.052474120768238,
         ["543966758"] = 9381.521817082501002
      },

      ["1024"] = {
         ["670828913"] = 7266.543469023138641,
         ["886885833"] = 4909.678505943471464,
         ["715144259"] = 6420.523971814663128,
         ["430281807"] = 6155.574899681907482,
         ["543966758"] = 6768.442817112501871
      },

      ["10000"] = {
         ["670828913"] = 6820.997542606792194,
         ["886885833"] = 6603.155229026356210,
         ["715144259"] = 6090.968745411100826,
         ["430281807"] = 7076.262336374620645,
         ["543966758"] = 7122.317473362872079
      }

   },

   ["model_7"] = {
      ["100"] = {
         ["670828913"] = 29347.061104901014915,
         ["886885833"] = 5187.247056132557191,
         ["715144259"] = 17634.838400384491251,
         ["430281807"] = 51085.260655551304808,
         ["543966758"] = 10724.486788176665868
      },

      ["1024"] = {
         ["670828913"] = 7064.096376908490129,
         ["886885833"] = 4499.262795375461792,
         ["715144259"] = 11255.706222673503362,
         ["430281807"] = 15384.255780661003882,
         ["543966758"] = 7314.007169289079684
      },

      ["10000"] = {
         ["670828913"] = 6501.378414909050662,
         ["886885833"] = 17213.929093276012281,
         ["715144259"] = 8945.512461443351640,
         ["430281807"] = 6000.944257386387108,
         ["543966758"] = 5662.860852483296185
      }
   },

   ["model_triaxial"] = {
      ["100"] = {
         ["670828913"] = 3782.343983875120102,
         ["886885833"] = 3411.102594775280068,
         ["715144259"] = 2746.520178665080039,
         ["430281807"] = 2178.869598272559870,
         ["543966758"] = 2567.201240292280090
      },

      ["1024"] = {
         ["670828913"] = 4318.274925499190431,
         ["886885833"] = 1951.879261796120090,
         ["715144259"] = 2053.282951098480225,
         ["430281807"] = 1637.224368139100079,
         ["543966758"] = 1281.858965930540080
      },

      ["10000"] = {
         ["670828913"] = 4355.185610458899646,
         ["886885833"] = 4073.968036395810032,
         ["715144259"] = 3392.079468521019862,
         ["430281807"] = 4030.240920996020122,
         ["543966758"] = 5823.843694836249597
      }
   }
}



function resultCloseEnough(a, b)
   return math.abs(a - b) < 1.0e-10
end

errFmtStr = [[
Result differs from expected:
   Expected = %20.15f  Actual = %20.15f  |Difference| = %20.15f
]]

function runCheckTest(testName, histogram, seed, nbody, ...)
   local fileResults, bodyResults
   local ret, result

   if not generatingResults then
      -- Check if the result exists first so we don't waste time on a useless test
      fileResults = assert(refResults[testName], "Didn't find result for test file")
      bodyResults = assert(fileResults[nbody], "Didn't find result with matching bodies")
      refResult = assert(bodyResults[seed], "Didn't find result with matching seed")
   end


   ret = runFullTest{
      nbodyBin  = nbodyBinary,
      testDir   = testDir,
      testName  = testName,
      histogram = histogram,
      seed      = seed,
      cached    = false,
      extraArgs = { nbody }
   }

   result = findLikelihood(ret, false)

   io.stdout:write(ret)

   if generatingResults then
      io.stderr:write(string.format("Test result: %d, %d, %s: %20.15f\n", nbody, seed, testName, result))
      return false
   end

   if result == nil then
      return true
   end

   local notClose = not resultCloseEnough(refResult, result)
   if notClose then
      io.stderr:write(string.format(errFmtStr, refResult, result, math.abs(result - refResult)))
   end

   return notClose
end

-- return true if passed
function testProbabilistic(resultFile, testName, histogram, nbody, iterations)
   local testTable, histTable, answer
   local resultTable = persisence.load(resultFile)
   assert(resultTable, "Failed to open result file " .. resultFile)

   testTable = assert(resultTable[testName], "Did not find result for test " .. testName)
   histTable = assert(testTable[nbody], "Did not find result for nbody " .. tostring(nbody))
   answer = assert(histTable[nbody], "Did not find result for histogram " .. histogram)

   local minAccepted = answer.mean - 3.0 * answer.stddev
   local maxAccepted = answer.mean + 3.0 * answer.stddev

   local result = 0.0
   local z = (result - answer.mean) / answer.stddev


   return true
end



function getResultName(testName)
   return string.format("%s__results.lua", testName)
end

if runCheckTest(testName, histogramName, testSeed, testBodies) then
   os.exit(1)
end


